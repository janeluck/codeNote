{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/mediaSourceExtensions/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"‰ΩøÁî®MediaSourceExtension\",\n  \"tags\": [\"video\", \"audio\", \"html\"],\n  \"emoji\": \"üëã\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const videoTag = document.getElementById(\\n  'my-video',\\n);\\n\\nconst myMediaSource = new MediaSource();\\nconst url = URL.createObjectURL(\\n  myMediaSource,\\n);\\n\\nvideoTag.src = url;\\n\\n// 1. add source buffers\\n\\n\\nconst audioSourceBuffer = myMediaSource.addSourceBuffer(\\n  'audio/mp4; codecs=\\\"mp4a.40.2\\\"',\\n);\\n\\nconst videoSourceBuffer = myMediaSource.addSourceBuffer(\\n  'video/mp4; codecs=\\\"avc1.64001e\\\"',\\n);\\n\\n// 2. download and add our audio/video to the SourceBuffers\\n\\n\\n// for the audio SourceBuffer\\n\\nfetch('http://server.com/audio.mp4')\\n  .then(\\n    function(response) {\\n      // The data has to be a JavaScript ArrayBuffer\\n      return response\\n        .arrayBuffer();\\n\\n    })\\n  .then(\\n    function(audioData) {\\n      audioSourceBuffer\\n        .appendBuffer(\\n          audioData,\\n        );\\n    });\\n\\n\\n// the same for the video SourceBuffer\\n\\nfetch('http://server.com/video.mp4')\\n  .then(function(response) {\\n    // The data has to be a JavaScript ArrayBuffer\\n    return response\\n      .arrayBuffer();\\n\\n  })\\n  .then(function(videoData) {\\n    videoSourceBuffer\\n      .appendBuffer(\\n        videoData,\\n      );\\n  });\\n\\n\\n\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"‰ΩøÁî®MediaSourceExtension","tags":["video","audio","html"],"emoji":"üëã","link":null},"fields":{"dateModified":"21st Oct 2020","slug":"/mediaSourceExtensions/"},"tableOfContents":{},"parent":{"__typename":"File","relativePath":"mediaSourceExtensions.md"}}},"pageContext":{"id":"54e6a0e2-2df6-50b3-97f5-5aa54eef3fb9","previous":null,"next":{"id":"7bf810f4-ecfa-503a-8f0a-6909a4a8e45b","frontmatter":{"title":"webpackÊâìÂåÖÈ°πÁõÆÊàê‰∏∫umdÊñá‰ª∂","tags":["webpack","module"]},"fields":{"slug":"/webpack-umd/"}},"hasUntagged":false,"basePath":"/"}}}