{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/deepClone/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"deepCloneÊ∑±Êã∑Ë¥ù\",\n  \"tags\": [\"javascript\"],\n  \"emoji\": \"üëã\",\n  \"link\": \"https://janeluck.github.io/codeNote/deepClone\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u624B\\u5199\\u5BF9\\u8C61\\u7684\\u6DF1\\u62F7\\u8D1D\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5165\\u53C2\\u7C7B\\u578B\\u5224\\u65AD\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u9012\\u5F52\\u5BFC\\u81F4\\u7684\\u7206\\u6808\\uFF0C\\u4F7F\\u7528\\u5FAA\\u73AF\\u89E3\\u51B3\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5FAA\\u73AF\\u5F15\\u7528\\uFF0C\\u4FDD\\u7559\\u5F15\\u7528\\u5173\\u7CFB\\u89E3\\u51B3\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u8BE5\\u65B9\\u6CD5\\u53EA\\u9488\\u5BF9\", \"[object Object]\", \"\\uFF0C\\u4E0D\\u8003\\u8651\\u6570\\u7EC4\\u548Ces6\\u5F15\\u8FDB\\u7684set\\u3001map\\u7B49\\u7B49 \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"/*\\n* \\u5BF9\\u8C61\\u7684\\u6DF1\\u62F7\\u8D1D\\n* @param {Object} source\\n* @return {Object}\\n* */\\nfunction deepClone(source) {\\n  // \\u5224\\u65AD\\u5165\\u53C2\\u662F\\u5426\\u4E3A\\u5BF9\\u8C61\\n  if (!isObject(source)) return source;\\n\\n  const root = {};\\n  const loopList = [\\n    {\\n      parent: root,\\n      data: source,\\n      key: undefined\\n    }\\n  ];\\n  // \\u4FDD\\u7559\\u76F8\\u540C\\u5F15\\u7528\\u7684\\u5173\\u7CFB\\uFF0C\\u4ECE\\u800C\\u7834\\u89E3\\u5FAA\\u73AF\\u4F9D\\u8D56\\n  const uniqueList = [];\\n\\n  while (loopList.length) {\\n    const node = loopList.shift();\\n    const parent = node.parent;\\n    const data = node.data;\\n    const key = node.key;\\n    let res = parent;\\n    if (typeof key !== 'undefined') {\\n      res = parent[key] = {}\\n    }\\n\\n\\n    // \\u5148\\u5224\\u65AD\\u662F\\u5426\\u5DF2\\u5B58\\u5728\\n    const uniqueData = find(uniqueList, data);\\n    if (uniqueData) {\\n      parent[key] = uniqueData.target;\\n      break;\\n    } else {\\n      // \\u4FDD\\u7559\\u6E90\\u6570\\u636E\\u548C\\u5F53\\u524D\\u62F7\\u8D1D\\u8FC7\\u7684\\u6570\\u636E\\u5F15\\u7528\\n      uniqueList.push({\\n        source: data,\\n        target: res\\n      })\\n    }\\n\\n    Object.keys(data).forEach(function (item) {\\n      if (isObject(data[item])) {\\n        loopList.push({\\n          parent: res,\\n          data: data[item],\\n          key: item\\n        })\\n      } else {\\n        res[item] = data[item]\\n      }\\n    });\\n\\n\\n  }\\n\\n  return root\\n}\\n\\nfunction find(arr, item) {\\n  for (let i = 0; i < arr.length; i++) {\\n    if (arr[i].source === item) {\\n      return arr[i]\\n    }\\n  }\\n}\\n\\n\\nfunction isObject(obj) {\\n  return Object.prototype.toString.call(obj) === '[object Object]';\\n}\\n\")), mdx(\"p\", null, \"\\u9012\\u5F52\\u5BFC\\u81F4\\u7684\\u7206\\u6808\\u95EE\\u9898\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"function deepClone0(source) {\\n  // \\u5224\\u65AD\\u5165\\u53C2\\u662F\\u5426\\u4E3A\\u5BF9\\u8C61\\n  if (!isObject(source)) return source;\\n\\n  const result = {}\\n  Object.keys(source).forEach(function (item) {\\n    if (isObject(source[item])) {\\n      result[item] = deepClone0(source[item]);\\n    } else {\\n      result[item] = source[item]\\n    }\\n  })\\n  return result\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"deepCloneÊ∑±Êã∑Ë¥ù","tags":["javascript"],"emoji":"üëã","link":"https://janeluck.github.io/codeNote/deepClone"},"fields":{"dateModified":"17th Aug 2020","slug":"/deepClone/"},"tableOfContents":{},"parent":{"__typename":"File","relativePath":"deepClone.md"}}},"pageContext":{"id":"b963c5d6-1028-50be-a64e-3b4bfcf82970","previous":{"id":"02bd3478-ec96-5f91-83ed-af195228a704","frontmatter":{"title":"ÁΩëÈ°µÂÜÖÂµåiframeÁöÑÂàùÂßãÂåñÂ§ÑÁêÜ","tags":["iframe","html"]},"fields":{"slug":"/iframe-note/"}},"next":{"id":"cf850610-7b9a-558c-9715-f41af52eaf6d","frontmatter":{"title":"Èò≤Êäñ(debounce)ÂíåËäÇÊµÅ(throttle)","tags":["javascript"]},"fields":{"slug":"/debounceVSthrottle/"}},"hasUntagged":false,"basePath":"/"}}}